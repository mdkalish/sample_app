diff --git a/Gemfile b/Gemfile index a776247..5d179fc 100644 --- a/Gemfile +++ b/Gemfile @@ -1,7 +1,7 @@ source 'https://rubygems.org' ruby '2.1.2' -gem 'rails', '4.1.5' +gem 'rails', '4.2.0.beta2' gem 'bcrypt', '3.1.7' gem 'faker', '1.4.2' gem 'carrierwave', '0.10.0' @@ -10,27 +10,28 @@ gem 'fog', '1.23.0' gem 'will_paginate', '3.0.7' gem 'bootstrap-will_paginate', '0.0.10' gem 'bootstrap-sass', '3.2.0.0' -gem 'sass-rails', '4.0.3' -gem 'uglifier', '2.5.1' +gem 'sass-rails', '5.0.0.beta1' +gem 'uglifier', '2.5.3' gem 'coffee-rails', '4.0.1' -gem 'jquery-rails', '3.1.1' -gem 'turbolinks', '2.2.2' +gem 'jquery-rails', '3.1.2' +gem 'turbolinks', '2.3.0' gem 'jbuilder', '2.1.3' +gem 'rails-html-sanitizer', '1.0.1' gem 'sdoc', '0.4.0', group: :doc +group :development, :test do + gem 'sqlite3', '1.3.9' + gem 'byebug', '3.4.0' + gem 'web-console', '2.0.0.beta3' + gem 'spring', '1.1.3' +end + group :test do gem 'minitest-reporters', '1.0.5' gem 'mini_backtrace', '0.1.3' gem 'guard-minitest', '2.3.1' end -group :development do - gem 'sqlite3', '1.3.9' - gem 'spring', '1.1.3' - gem 'byebug', '3.4.0' - gem 'web-console', '2.0.0.beta3' -end - group :production do gem 'pg', '0.17.1' gem 'rails_12factor', '0.0.2' diff --git a/Gemfile.lock b/Gemfile.lock index dbbf436..e1f0e12 100644 --- a/Gemfile.lock +++ b/Gemfile.lock @@ -1,34 +1,43 @@ GEM remote: https://rubygems.org/ specs: - actionmailer (4.1.5) - actionpack (= 4.1.5) - actionview (= 4.1.5) - mail (~> 2.5.4) - actionpack (4.1.5) - actionview (= 4.1.5) - activesupport (= 4.1.5) - rack (~> 1.5.2) + actionmailer (4.2.0.beta2) + actionpack (= 4.2.0.beta2) + actionview (= 4.2.0.beta2) + activejob (= 4.2.0.beta2) + mail (~> 2.5, >= 2.5.4) + rails-dom-testing (~> 1.0, >= 1.0.3) + actionpack (4.2.0.beta2) + actionview (= 4.2.0.beta2) + activesupport (= 4.2.0.beta2) + rack (~> 1.6.0.beta) rack-test (~> 0.6.2) - actionview (4.1.5) - activesupport (= 4.1.5) + rails-dom-testing (~> 1.0, >= 1.0.3) + rails-html-sanitizer (~> 1.0, >= 1.0.1) + actionview (4.2.0.beta2) + activesupport (= 4.2.0.beta2) builder (~> 3.1) erubis (~> 2.7.0) - activemodel (4.1.5) - activesupport (= 4.1.5) + rails-dom-testing (~> 1.0, >= 1.0.3) + rails-html-sanitizer (~> 1.0, >= 1.0.1) + activejob (4.2.0.beta2) + activesupport (= 4.2.0.beta2) + globalid (>= 0.3.0) + activemodel (4.2.0.beta2) + activesupport (= 4.2.0.beta2) builder (~> 3.1) - activerecord (4.1.5) - activemodel (= 4.1.5) - activesupport (= 4.1.5) - arel (~> 5.0.0) - activesupport (4.1.5) - i18n (~> 0.6, >= 0.6.9) + activerecord (4.2.0.beta2) + activemodel (= 4.2.0.beta2) + activesupport (= 4.2.0.beta2) + arel (>= 6.0.0.beta1, < 6.1) + activesupport (4.2.0.beta2) + i18n (>= 0.7.0.beta1, < 0.8) json (~> 1.7, >= 1.7.7) minitest (~> 5.1) thread_safe (~> 0.1) tzinfo (~> 1.1) ansi (1.4.3) - arel (5.0.1.20140414130214) + arel (6.0.0.beta1) bcrypt (3.1.7) binding_of_caller (0.7.3.pre1) debug_inspector (>= 0.0.1) @@ -60,11 +69,11 @@ GEM debug_inspector (0.0.2) debugger-linecache (1.2.0) erubis (2.7.0) - excon (0.39.5) - execjs (2.2.1) + excon (0.40.0) + execjs (2.2.2) faker (1.4.2) i18n (~> 0.5) - ffi (1.9.3) + ffi (1.9.6) fog (1.23.0) fog-brightbox fog-core (~> 1.23) @@ -72,7 +81,7 @@ GEM fog-softlayer ipaddress (~> 0.5) nokogiri (~> 1.5, >= 1.5.11) - fog-brightbox (0.5.1) + fog-brightbox (0.6.0) fog-core (~> 1.22) fog-json inflecto @@ -85,10 +94,12 @@ GEM net-ssh (>= 2.1.3) fog-json (1.0.0) multi_json (~> 1.0) - fog-softlayer (0.3.17) + fog-softlayer (0.3.21) fog-core fog-json formatador (0.2.5) + globalid (0.3.0) + activesupport (>= 4.1.0) guard (2.6.1) formatador (>= 0.2.4) listen (~> 2.7) @@ -100,34 +111,35 @@ GEM minitest (>= 3.0) hike (1.2.3) hitimes (1.2.2) - i18n (0.6.11) + i18n (0.7.0.beta1) inflecto (0.0.2) ipaddress (0.8.0) jbuilder (2.1.3) activesupport (>= 3.0.0, < 5) multi_json (~> 1.2) - jquery-rails (3.1.1) + jquery-rails (3.1.2) railties (>= 3.0, < 5.0) thor (>= 0.14, < 2.0) json (1.8.1) kgio (2.9.2) - listen (2.7.9) + listen (2.7.11) celluloid (>= 0.15.2) rb-fsevent (>= 0.9.3) rb-inotify (>= 0.9) + loofah (2.0.1) + nokogiri (>= 1.5.9) lumberjack (1.0.9) - mail (2.5.4) - mime-types (~> 1.16) - treetop (~> 1.4.8) + mail (2.6.1) + mime-types (>= 1.16, < 3) method_source (0.8.2) - mime-types (1.25.1) + mime-types (2.4.3) mini_backtrace (0.1.3) minitest (> 1.2.0) rails (>= 2.3.3) mini_magick (3.8.0) subexec (~> 0.2.1) mini_portile (0.6.0) - minitest (5.4.1) + minitest (5.4.2) minitest-reporters (1.0.5) ansi builder @@ -140,32 +152,40 @@ GEM nokogiri (1.6.3.1) mini_portile (= 0.6.0) pg (0.17.1) - polyglot (0.3.5) pry (0.10.1) coderay (~> 1.1.0) method_source (~> 0.8.1) slop (~> 3.4) - rack (1.5.2) + rack (1.6.0.beta) rack-test (0.6.2) rack (>= 1.0) - rails (4.1.5) - actionmailer (= 4.1.5) - actionpack (= 4.1.5) - actionview (= 4.1.5) - activemodel (= 4.1.5) - activerecord (= 4.1.5) - activesupport (= 4.1.5) + rails (4.2.0.beta2) + actionmailer (= 4.2.0.beta2) + actionpack (= 4.2.0.beta2) + actionview (= 4.2.0.beta2) + activejob (= 4.2.0.beta2) + activemodel (= 4.2.0.beta2) + activerecord (= 4.2.0.beta2) + activesupport (= 4.2.0.beta2) bundler (>= 1.3.0, < 2.0) - railties (= 4.1.5) - sprockets-rails (~> 2.0) + railties (= 4.2.0.beta2) + sprockets-rails (~> 3.0.0.beta1) + rails-deprecated_sanitizer (1.0.3) + activesupport (>= 4.2.0.alpha) + rails-dom-testing (1.0.4) + activesupport (>= 4.2.0.beta, < 5.0) + nokogiri (~> 1.6.0) + rails-deprecated_sanitizer (>= 1.0.1) + rails-html-sanitizer (1.0.1) + loofah (~> 2.0) rails_12factor (0.0.2) rails_serve_static_assets rails_stdout_logging rails_serve_static_assets (0.0.2) rails_stdout_logging (0.0.3) - railties (4.1.5) - actionpack (= 4.1.5) - activesupport (= 4.1.5) + railties (4.2.0.beta2) + actionpack (= 4.2.0.beta2) + activesupport (= 4.2.0.beta2) rake (>= 0.8.7) thor (>= 0.18.1, < 2.0) raindrops (0.13.0) @@ -175,26 +195,26 @@ GEM ffi (>= 0.5.0) rdoc (4.1.2) json (~> 1.4) - ruby-progressbar (1.5.1) - sass (3.2.19) - sass-rails (4.0.3) + ruby-progressbar (1.6.0) + sass (3.4.6) + sass-rails (5.0.0.beta1) railties (>= 4.0.0, < 5.0) - sass (~> 3.2.0) - sprockets (~> 2.8, <= 2.11.0) - sprockets-rails (~> 2.0) + sass (~> 3.2) + sprockets (~> 2.12) + sprockets-rails (>= 2.0, < 4.0) sdoc (0.4.0) json (~> 1.8) rdoc (~> 4.0, < 5.0) slop (3.6.0) spring (1.1.3) - sprockets (2.11.0) + sprockets (2.12.2) hike (~> 1.2) multi_json (~> 1.0) rack (~> 1.0) tilt (~> 1.1, != 1.3.0) - sprockets-rails (2.1.4) - actionpack (>= 3.0) - activesupport (>= 3.0) + sprockets-rails (3.0.0.beta1) + actionpack (>= 4.0) + activesupport (>= 4.0) sprockets (~> 2.8) sqlite3 (1.3.9) subexec (0.2.3) @@ -203,14 +223,11 @@ GEM tilt (1.4.1) timers (4.0.1) hitimes - treetop (1.4.15) - polyglot - polyglot (>= 0.3.1) - turbolinks (2.2.2) + turbolinks (2.3.0) coffee-rails tzinfo (1.2.2) thread_safe (~> 0.1) - uglifier (2.5.1) + uglifier (2.5.3) execjs (>= 0.3.0) json (>= 1.8.0) unicorn (4.8.3) @@ -238,19 +255,20 @@ DEPENDENCIES fog (= 1.23.0) guard-minitest (= 2.3.1) jbuilder (= 2.1.3) - jquery-rails (= 3.1.1) + jquery-rails (= 3.1.2) mini_backtrace (= 0.1.3) mini_magick (= 3.8.0) minitest-reporters (= 1.0.5) pg (= 0.17.1) - rails (= 4.1.5) + rails (= 4.2.0.beta2) + rails-html-sanitizer (= 1.0.1) rails_12factor (= 0.0.2) - sass-rails (= 4.0.3) + sass-rails (= 5.0.0.beta1) sdoc (= 0.4.0) spring (= 1.1.3) sqlite3 (= 1.3.9) - turbolinks (= 2.2.2) - uglifier (= 2.5.1) + turbolinks (= 2.3.0) + uglifier (= 2.5.3) unicorn (= 4.8.3) web-console (= 2.0.0.beta3) will_paginate (= 3.0.7) diff --git a/app/assets/stylesheets/scaffolds.css.scss b/app/assets/stylesheets/scaffolds.css.scss index 6ec6a8f..1391b61 100644 --- a/app/assets/stylesheets/scaffolds.css.scss +++ b/app/assets/stylesheets/scaffolds.css.scss @@ -19,13 +19,13 @@ pre { } a { - color: #000; + color: #3071a9; &:visited { - color: #666; + color: #285e8e; } &:hover { - color: #fff; - background-color: #000; + color: #000; + background-color: transparent; } } diff --git a/app/controllers/sessions_controller.rb b/app/controllers/sessions_controller.rb index d0ebce4..055c87c 100644 --- a/app/controllers/sessions_controller.rb +++ b/app/controllers/sessions_controller.rb @@ -6,10 +6,16 @@ class SessionsController < ApplicationController def create user = User.find_by(email: params[:session][:email].downcase) if user && user.authenticate(params[:session][:password]) - # Log the user in and redirect to the user's show page. - log_in user - params[:session][:remember_me] == '1' ? remember(user) : forget(user) - redirect_back_or user + if user.activated? + log_in user + params[:session][:remember_me] == '1' ? remember(user) : forget(user) + redirect_back_or user # friendly forwarding + else + message = "Account not activated. " + message += "Check your email for the activation link." + flash[:warning] = message + redirect_to root_url + end else flash.now[:danger] = "Invalid email/password combination!" render 'new' diff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb index 1ba8e7b..9733c92 100644 --- a/app/controllers/users_controller.rb +++ b/app/controllers/users_controller.rb @@ -25,18 +25,24 @@ class UsersController < ApplicationController def create @user = User.new(user_params) if @user.save - log_in @user # log_in from application_controller.rb - flash[:success] = "Welcome to the Sample App!" - redirect_to @user # same as redirect_to user_url(@user) + @user.send_activation_email + # deposed by the preceding line: + # UserMailer.account_activation(@user).deliver_now + flash[:info] = "Please check your email to activate your account." + redirect_to root_url + # Outdated by introduction of mailer (Listing 10.19): + # log_in @user # log_in from application_controller.rb + # flash[:success] = "Welcome to the Sample App!" + # redirect_to @user # same as redirect_to user_url(@user) else render 'new' end end - def edit + def edit end - def update + def update if @user.update_attributes(user_params) flash[:success] = "Profile updated" redirect_to @user @@ -48,7 +54,7 @@ class UsersController < ApplicationController private # defining the so-called strong parameters def user_params - params.require(:user).permit(:name, :email, :password, + params.require(:user).permit(:name, :email, :password, :password_confirmation) # mind the absence of :admin here! end @@ -74,5 +80,4 @@ class UsersController < ApplicationController def admin_user redirect_to root_url unless current_user.admin? end - end diff --git a/app/helpers/sessions_helper.rb b/app/helpers/sessions_helper.rb index 6affef7..016f167 100644 --- a/app/helpers/sessions_helper.rb +++ b/app/helpers/sessions_helper.rb @@ -5,7 +5,7 @@ module SessionsHelper session[:user_id] = user.id end - def remember(user) + def remember(user) user.remember cookies.permanent.signed[:user_id] = user.id cookies.permanent[:remember_token] = user.remember_token @@ -22,7 +22,7 @@ module SessionsHelper @current_user ||= User.find_by(id: user_id) elsif (user_id = cookies.signed[:user_id]) user = User.find_by(id: user_id) - if user && user.authenticated?(cookies[:remember_token]) + if user && user.authenticated?(:remember ,cookies[:remember_token]) log_in user @current_user = user end diff --git a/app/models/user.rb b/app/models/user.rb index 50cc4fb..e23802d 100644 --- a/app/models/user.rb +++ b/app/models/user.rb @@ -1,11 +1,13 @@ class User < ActiveRecord::Base - attr_accessor :remember_token - #before_save { self.email = email.downcase } # works the same as: - before_save { email.downcase! } + attr_accessor :remember_token, :activation_token, :reset_token + # before_save { self.email = email.downcase } # works the same as: + # before_save { email.downcase! } # now encapsulated in a method: + before_save :downcase_email + before_create :create_activation_digest # this code is called a method reference validates :name, presence: true, #same as validates(:name, presence:true) length: { maximum: 50 } VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i - + validates :email, presence: true, format: { with: VALID_EMAIL_REGEX }, uniqueness: { case_sensitive: false } has_secure_password @@ -32,8 +34,10 @@ class User < ActiveRecord::Base end # Returns true if the given token matches the digest. - def authenticated?(remember_token) - BCrypt::Password.new(remember_digest).is_password?(remember_token) + def authenticated?(attribute, token) + digest = send("#{attribute}_digest") # equals self.send(...) + return false if digest.nil? + BCrypt::Password.new(digest).is_password?(token) end # Forgets a user. @@ -41,4 +45,47 @@ class User < ActiveRecord::Base update_attribute(:remember_digest, nil) end + # Activates and account. + def activate + update_attribute(:activated, true) + update_attribute(:activated_at, Time.zone.now) + end + + # Sends activation email. + def send_activation_email + UserMailer.account_activation(self).deliver_now + end + + # Sets the password reset attributes. + def create_reset_digest + self.reset_token = User.new_token + update_attribute(:reset_digest, User.digest(reset_token)) + update_attribute(:reset_sent_at, Time.zone.now) + end + + # Sends password reset email. + def send_password_reset_email + UserMailer.password_reset(self).deliver_now + end + + # Returns true if a password reset has expired. + def password_reset_expired? + reset_sent_at < 2.hours.ago + end + + private + + # Converts email to all lower-case. + def downcase_email + self.email = email.downcase + end + + # Creates and assigns the activation token and digest. + def create_activation_digest + self.activation_token = User.new_token + self.activation_digest = User.digest(activation_token) + end + end + + diff --git a/app/views/sessions/new.html.erb b/app/views/sessions/new.html.erb index be6059c..b8be0a8 100644 --- a/app/views/sessions/new.html.erb +++ b/app/views/sessions/new.html.erb @@ -9,6 +9,7 @@ <%= f.text_field :email %> <%= f.label :password %> + <%= link_to "(forgot password)", new_password_reset_path %> <%= f.password_field :password %> <%= f.label :remember_me, class: "checkbox inline" do %> diff --git a/config/environments/development.rb b/config/environments/development.rb index ddf0e90..6fe83b0 100644 --- a/config/environments/development.rb +++ b/config/environments/development.rb @@ -13,8 +13,6 @@ Rails.application.configure do config.consider_all_requests_local = true config.action_controller.perform_caching = false - # Don't care if the mailer can't send. - config.action_mailer.raise_delivery_errors = false # Print deprecation notices to the Rails logger. config.active_support.deprecation = :log @@ -34,4 +32,12 @@ Rails.application.configure do # Raises error for missing translations # config.action_view.raise_on_missing_translations = true + + # maciej, Listing 10.12: + # Care if the mailer can't send: + config.action_mailer.raise_delivery_errors = true + config.action_mailer.delivery_method = :test + host = 'localhost:3000' + config.action_mailer.default_url_options = { host: host } + ## end diff --git a/config/environments/test.rb b/config/environments/test.rb index 053f5b6..d1d7ae8 100644 --- a/config/environments/test.rb +++ b/config/environments/test.rb @@ -30,6 +30,8 @@ Rails.application.configure do # The :test delivery method accumulates sent emails in the # ActionMailer::Base.deliveries array. config.action_mailer.delivery_method = :test + # maciej, Listing 10.17: + config.action_mailer.default_url_options = { host: 'example.com' } # Print deprecation notices to the stderr. config.active_support.deprecation = :stderr diff --git a/config/routes.rb b/config/routes.rb index 2713530..a43a3ab 100644 --- a/config/routes.rb +++ b/config/routes.rb @@ -1,4 +1,10 @@ -Rails.application.routes.draw do +Rails.application.routes.draw do + get 'password_resets/new' + + get 'password_resets/edit' + + get 'account_activations/edit' + root 'static_pages#home' get 'help' => 'static_pages#help' get 'about' => 'static_pages#about' @@ -7,11 +13,17 @@ Rails.application.routes.draw do # 8.1: Session rules: get 'login' => 'sessions#new' post 'login' => 'sessions#create' - delete 'logout' => 'sessions#destroy' + delete 'logout' => 'sessions#destroy' # 7.1.2: resources :users - - + # 10.1.1: + resources :account_activations, only: [:edit] + # generates edit_account_activation_url/_path + # 10.1.2, Listing 10.35: + resources :password_resets, only: [:new, :create, :edit, :update] + # generates new_password_reset_path + + # The priority is based upon order of creation: first created -> highest priority. # See how all your routes lay out with "rake routes". diff --git a/db/schema.rb b/db/schema.rb index 15b67ea..3ac5f0b 100644 --- a/db/schema.rb +++ b/db/schema.rb @@ -11,16 +11,21 @@ # # It's strongly recommended that you check this file into your version control system. -ActiveRecord::Schema.define(version: 20141017193420) do +ActiveRecord::Schema.define(version: 20141024133100) do create_table "users", force: true do |t| - t.string "name" - t.string "email" + t.string "name", limit: 255 + t.string "email", limit: 255 t.datetime "created_at" t.datetime "updated_at" - t.string "password_digest" - t.string "remember_digest" - t.boolean "admin", default: false + t.string "password_digest", limit: 255 + t.string "remember_digest", limit: 255 + t.boolean "admin", default: false + t.string "activation_digest", limit: 255 + t.boolean "activated", default: false + t.datetime "activated_at" + t.string "reset_digest" + t.datetime "reset_sent_at" end add_index "users", ["email"], name: "index_users_on_email", unique: true diff --git a/db/seeds.rb b/db/seeds.rb index 791e9b1..b95b21a 100644 --- a/db/seeds.rb +++ b/db/seeds.rb @@ -10,7 +10,9 @@ User.create!( name: "Example User", email: "example@railstutorial.org", password: "foobar", password_confirmation: "foobar", - admin: true ) + admin: true, + activated: true, + activated_at: Time.zone.now ) 99.times do |n| name = Faker::Name.name @@ -19,5 +21,7 @@ User.create!( name: "Example User", User.create!( name: name, email: email, password: password, - password_confirmation: password ) + password_confirmation: password, + activated: true, + activated_at: Time.zone.now ) end \ No newline at end of file diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml index 2c47bd9..6bb191e 100644 --- a/test/fixtures/users.yml +++ b/test/fixtures/users.yml @@ -5,25 +5,35 @@ michael: email: michael@example.com password_digest: <%= User.digest('password') %> admin: true + activated: true + activated_at: <%= Time.zone.now %> archer: name: Sterling Archer email: duchess@example.gov password_digest: <%= User.digest('password') %> + activated: true + activated_at: <%= Time.zone.now %> lana: name: Lana Kane email: hands@example.gov password_digest: <%= User.digest('password') %> + activated: true + activated_at: <%= Time.zone.now %> mallory: name: Mallory Archer email: boss@example.gov password_digest: <%= User.digest('password') %> + activated: true + activated_at: <%= Time.zone.now %> <% 30.times do |n| %> user_<%= n %>: name: <%= "User #{n}" %> email: <%= "user-#{n}@example.com" %> password_digest: <%= User.digest('password') %> + activated: true + activated_at: <%= Time.zone.now %> <% end %> diff --git a/test/integration/users_signup_test.rb b/test/integration/users_signup_test.rb index ea26684..0a289da 100644 --- a/test/integration/users_signup_test.rb +++ b/test/integration/users_signup_test.rb @@ -1,9 +1,12 @@ require 'test_helper' class UsersSignupTest < ActionDispatch::IntegrationTest - # test "the truth" do - # assert true - # end + + def setup + ActionMailer::Base.deliveries.clear + # Because the deliveries array is global, we have to reset it in the setup + #+method to prevent our code from breaking if any other tests deliver email + end test "invalid signup information" do get signup_path @@ -18,21 +21,43 @@ class UsersSignupTest < ActionDispatch::IntegrationTest assert_select 'div.field_with_errors' end - test "valid signup information" do + test "valid signup information with account activation" do get signup_path - name = "Test Name" - email = "user@valid.test" - password = "fooeight" - password_confirmation = "fooeight" + name = "Example User" + email = "user@example.com" + password = "password" assert_difference 'User.count', 1 do - post_via_redirect users_path, user: { name: "Test Name", - email: "user@valid.test", - password: "fooeight", - password_confirmation: "fooeight"} - end + post users_path, user: { name: name, + email: email, + password: password, + password_confirmation: password } + end + assert_equal 1, ActionMailer::Base.deliveries.size + user = assigns(:user) + # Inside a test, you can access instance variables defined in the controller + #+by using assigns with the corresponding symbol. For example, if the create + #+action defines an @user variable, we can access it in the test using + #+assigns(:user). + # assigns lets us access instance variables in the corresponding action. + #+For example, the Users controller’s create action defines an @user variable + #+(Listing 10.19), so we can access it in the test using assigns(:user). + assert_not user.activated? + + # Try not to log in before activation + log_in_as(user) + assert_not is_logged_in? + # Invalid activation token + get edit_account_activation_path("invalid token") + assert_not is_logged_in? + # Valid token, wrong email + get edit_account_activation_path(user.activation_token, email:'wrong') + assert_not is_logged_in? + # Valid activation token + get edit_account_activation_path(user.activation_token, email: user.email) + assert user.reload.activated? + follow_redirect! assert_template 'users/show' assert is_logged_in? - assert_not flash.nil? + # assert_not flash.nil? end - end diff --git a/test/models/user_test.rb b/test/models/user_test.rb index c8b3a08..4b59a89 100644 --- a/test/models/user_test.rb +++ b/test/models/user_test.rb @@ -1,7 +1,7 @@ require 'test_helper' class UserTest < ActiveSupport::TestCase - + def setup @user = User.new(name: "Example User", email: "user@example.com", password: "foobar", password_confirmation: "foobar") @@ -11,7 +11,7 @@ class UserTest < ActiveSupport::TestCase assert @user.valid? end - test "name should be present" do + test "name should be present" do @user.name = "" assert_not @user.valid? end @@ -35,7 +35,7 @@ class UserTest < ActiveSupport::TestCase end end - test "email validation should reject invalid addresses" do + test "email validation should reject invalid addresses" do invalid_addresses = %w[user@example,com user_at_foo.org user.name@example. foo@bar_baz.com foo@bar+baz.com foo@bar..com] invalid_addresses.each do |invalid_address| @@ -63,4 +63,8 @@ class UserTest < ActiveSupport::TestCase assert_equal mixed_case_email.downcase, @user.reload.email end + test "authenticated? should return false for a user with nil digest" do + assert_not @user.authenticated?(:remember, '') + end + end exec
